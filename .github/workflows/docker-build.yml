name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - staging
      - production

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Determine environment and short commit SHA
      - name: Set environment variables
        id: vars
        run: |
          # Grab the first 7 chars of the commit SHA
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

          # Determine environment name
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "env_name=dev" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == "refs/heads/production" ]]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          fi

      # Step 5: Build and tag the Docker image
      - name: Build the Docker image
        run: |
          if [[ "${{ steps.vars.outputs.env_name }}" == "dev" ]]; then
            # Dev (main branch): build only :latest
            docker build \
              -t ghcr.io/verde-websites/fpl-infra/myfpl-api:latest \
              .
          elif [[ "${{ steps.vars.outputs.env_name }}" == "staging" ]]; then
            # Staging: build environment-SHA tag
            docker build \
              -t ghcr.io/verde-websites/fpl-infra/myfpl-api:staging-${{ steps.vars.outputs.short_sha }} \
              .
          elif [[ "${{ steps.vars.outputs.env_name }}" == "production" ]]; then
            # Production: build environment-SHA tag
            docker build \
              -t ghcr.io/verde-websites/fpl-infra/myfpl-api:production-${{ steps.vars.outputs.short_sha }} \
              .
          fi

      # Step 6: Push the Docker images
      - name: Push Docker images
        run: |
          if [[ "${{ steps.vars.outputs.env_name }}" == "dev" ]]; then
            docker push ghcr.io/verde-websites/fpl-infra/myfpl-api:latest
          elif [[ "${{ steps.vars.outputs.env_name }}" == "staging" ]]; then
            docker push ghcr.io/verde-websites/fpl-infra/myfpl-api:staging-${{ steps.vars.outputs.short_sha }}
          elif [[ "${{ steps.vars.outputs.env_name }}" == "production" ]]; then
            docker push ghcr.io/verde-websites/fpl-infra/myfpl-api:production-${{ steps.vars.outputs.short_sha }}
          fi
